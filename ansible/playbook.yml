
- hosts: demo
  tasks:

    - name: Install Docker
      block: 
        - name: Install aptitude using apt
          apt:
            name:
              - aptitude 
            state: latest 
            update_cache: yes 
            force_apt_get: yes

        - name: add universe
          apt_repository:
            repo: "deb http://us.archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
            state: present

        - name: Install packets
          apt: 
            name:
            - "apt-transport-https"
            - "ca-certificates"
            - "curl"
            - "gnupg-agent"
            - "software-properties-common"
            - "python3-pip"
            - "python3-setuptools"
            update_cache: yes
            cache_valid_time: 86400

        - name: add key Docker
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present
            
    
        - name: Install stable repository
          apt_repository:
            repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            update_cache: yes
            filename: docker

        - name: Install Docker
          apt: 
            pkg:
              - docker-ce 
              - docker-ce-cli 
              - containerd.io     
            state: present
            update_cache: yes

        - name: test Docker
          service:
            name: docker
            state: restarted
            enabled: yes
      become: yes

    - name: Install docker_compose
      block: 
        - name: get last version docker-compose
          uri:
            url: https://api.github.com/repos/docker/compose/releases/latest
            body_format: json
          register: page
          
        - name: create directory
          file:
            path: /usr/local/lib/docker/
            state: directory

        - name: install docker-compose
          get_url:
            url: "https://github.com/docker/compose/releases/download/{{ page.json.tag_name }}/docker-compose-linux-x86_64"
            dest: /usr/local/lib/docker/cli-plugins
            mode: 0755     

        - name: finish install
          block:
            - name: add user for group Docker
              user:
                name: "{{ansible_user}}"
                groups: docker
                append: yes
            # - name: Restart
            #   reboot:

        - name: install docker-compose
          apt:
            name:
              - docker-compose
            state: present

    - name: install gitea,jenkins,mariadb
      block:
        - name: —Åreate directory
          file:
            path: /home/service/
            state: directory
          

        - name: copy project gitea+jenkins+mariadb
          ansible.builtin.copy:
            src: /home/nikolos/Documents/cv/gitea,jenkins,mariadb.tar.gz
            dest: /home/service
          

        - name: unzip archive gitea,jenkins,mariadb
          ansible.builtin.unarchive:
            src: /home/service/gitea,jenkins,mariadb.tar.gz
            dest: /home/service
            remote_src: yes
          

        - name: gitea+jenkins+mariadb
          community.docker.docker_compose:
            project_src: /home/service
            files:
            - /home/service/gitea,jenkins,mariadb/docker-compose.yml

    - name: install grafana+prometheus
      block:
        - name: copy project grafana+prometheus
          ansible.builtin.copy:
            src: /home/nikolos/Documents/cv/grafana-docker-stack.tar.gz
            dest: /home/service
          

        - name: unzip archive grafana+prometheus
          ansible.builtin.unarchive:
            src: /home/service/grafana-docker-stack.tar.gz
            dest: /home/service
            remote_src: yes

        - name: grafana+prometheus
          community.docker.docker_compose:
            project_src: /home/service
            files:
            - /home/service/grafana-docker-stack/docker-compose.yml

    - name: install nginx proxy manager
      block:
        - name: copy project nginx proxy manager
          ansible.builtin.copy:
            src: /home/nikolos/Documents/cv/proxy_manager.tar.gz
            dest: /home/service
          

        - name: unzip archive nginx proxy manager
          ansible.builtin.unarchive:
            src: /home/service/proxy_manager.tar.gz
            dest: /home/service
            remote_src: yes

        - name: nginx proxy manager
          community.docker.docker_compose:
            project_src: /home/service
            files:
            - /home/service/proxy_manager/docker-compose.yml

      become: yes
  
